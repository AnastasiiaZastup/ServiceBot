import React, { useEffect, useState } from "react";
import Button from "../components/Button";
import Card from "../components/Card";

export default function MyAppointmentsMaster({ user, onBack, showToast }) {
  const [appointments, setAppointments] = useState([]);

  const fetchAppointments = async () => {
    try {
      const res = await fetch(
        `https://service-bot-backend.onrender.com/master/appointments/${user.telegram_id}`
      );
      if (!res.ok) throw new Error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–∞–ø–∏—Å–∏");
      const data = await res.json();
      setAppointments(data.appointments || []);
    } catch (err) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤ –º–∞–π—Å—Ç—Ä–∞:", err);
      showToast("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Å—ñ–≤", "error");
    }
  };

  useEffect(() => {
    if (user?.telegram_id) fetchAppointments();
  }, [user]);

  const updateStatus = async (id, status) => {
    try {
      const res = await fetch(
        `https://service-bot-backend.onrender.com/appointments/${id}/status`,
        {
          method: "PATCH",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ status }),
        }
      );
      if (!res.ok) throw new Error("–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É");
      await fetchAppointments();
      showToast(
        status === "confirmed" ? "‚úÖ –ó–∞–ø–∏—Å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ" : "‚ùå –ó–∞–ø–∏—Å —Å–∫–∞—Å–æ–≤–∞–Ω–æ",
        status === "confirmed" ? "success" : "error"
      );
    } catch (err) {
      console.error("‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–æ:", err);
      showToast("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å", "error");
    }
  };

  return (
    <div style={{ padding: 16 }}>
      <h2>üßë‚Äçüé® –í–∞—à—ñ –∑–∞–ø–∏—Å–∏ (–º–∞–π—Å—Ç–µ—Ä)</h2>
      <Button onClick={onBack} type="grey" style={{ marginBottom: 12 }}>
        ‚¨ÖÔ∏è –ù–∞–∑–∞–¥
      </Button>

      {appointments.length === 0 ? (
        <p>–ù–∞—Ä–∞–∑—ñ —É –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–ø–∏—Å—ñ–≤.</p>
      ) : (
        <ul style={{ listStyle: "none", padding: 0 }}>
          {appointments.map((a) => (
            <li key={a.id} style={{ marginBottom: 16 }}>
              <Card>
                <strong>{a.service_title}</strong> <br />
                üë§ –ö–ª—ñ—î–Ω—Ç: {a.client_name} <br />
                üìÖ {new Date(a.date).toLocaleDateString()} üïí{" "}
                {a.time.slice(0, 5)} <br />
                üìå –°—Ç–∞—Ç—É—Å: <strong>{a.status}</strong> <br />
                <div style={{ marginTop: 8 }}>
                  <Button
                    onClick={() => updateStatus(a.id, "confirmed")}
                    type="success"
                    style={{ marginRight: 8 }}
                  >
                    ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏
                  </Button>
                  <Button
                    onClick={() => updateStatus(a.id, "canceled")}
                    type="danger"
                  >
                    ‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏
                  </Button>
                </div>
              </Card>
            </li>
          ))}
        </ul>
      )}
    </div>
  );
}
